/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package klient;

import Server.iServerFunctions;
import java.awt.BorderLayout;
import java.awt.Button;
import java.awt.Dimension;
import java.awt.event.ActionEvent;
import java.awt.image.BufferedImage;
import java.io.File;
import java.rmi.Naming;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import static javax.swing.JTabbedPane.SCROLL_TAB_LAYOUT;


        

/**
 *
 * @author Inferno
 */
//import GalgeLogik.GalgeI;
public class guiGalge extends javax.swing.JFrame {

    iServerFunctions spil;

    /**
     * Creates new form guiGalge
     */
    public guiGalge() {

        initComponents();

        loginPanel.setVisible(true);
        jPanel6.setVisible(false);
        øvrePanel.setVisible(true);
        jPanel8.setVisible(true);
        jPanel9.setVisible(true);
        nedrePanel.setVisible(true);
        panelTabt.setVisible(false);
        panelVundet.setVisible(false);
        jFrame1.pack();

    }
    /**
     * Benyttes til at finde til galgetjeneste, hvorpå galgeLogik ligger.
     * @return
     * @throws Exception 
     */
    public boolean connect() throws Exception {
        spil = (iServerFunctions) Naming.lookup("rmi://localhost/galgeleg");
        
        return true;
    }
    /**
     * Benyttes til at sende argumentet som det bliver givet til galgetjeneste.
     * @param gæt
     * @throws Exception 
     */
    public void knapGæt(String gæt) throws Exception {
        spil.gætBogstav(gæt);
    }
    /**
     * Opdaterer tekstfeltet som skal gættes på.
     * @throws Exception 
     */
    public void opdaterOrd() throws Exception {
        if (spil.erSpilletTabt()) {
            panelTabt.setVisible(true);
            nedrePanel.setVisible(false);
            ord.setText(spil.getSynligtOrd());
        } else if (spil.erSpilletSlut()) {
            nedrePanel.setVisible(false);
            panelVundet.setVisible(true);
            jPanel9.setVisible(false);
        } else {
            ord.setText(spil.getSynligtOrd());
        }
    }
    /**
     * Kalder spil.getAntalForkerteBogstaver og overskriver derefter 
     * billedePanel til den korrekte figur.
     * @throws Exception 
     */
    public void opdaterSpil() throws Exception {
        ImageIcon myPicture;
        JLabel picture = null;

        switch (spil.getAntalForkerteBogstaver()) {

            case 1:
                jPanel8.remove(0);
                myPicture = new ImageIcon(getClass().getResource("billeder/forkert1.png"));
                picture = new JLabel(myPicture);
                System.out.println("Forkert bogstav");
                jPanel8.add(picture);
                break;
            case 2:
                jPanel8.remove(0);
                myPicture = new ImageIcon(getClass().getResource("billeder/forkert2.png"));
                picture = new JLabel(myPicture);
                System.out.println("Forkert bogstav");
                jPanel8.add(picture);
                break;
            case 3:
                jPanel8.remove(0);
                myPicture = new ImageIcon(getClass().getResource("billeder/forkert3.png"));
                picture = new JLabel(myPicture);
                System.out.println("Forkert bogstav");
                jPanel8.add(picture);
                break;
            case 4:
                jPanel8.remove(0);
                myPicture = new ImageIcon(getClass().getResource("billeder/forkert4.png"));
                picture = new JLabel(myPicture);
                System.out.println("Forkert bogstav");
                jPanel8.add(picture);
                break;
            case 5:
                jPanel8.remove(0);
                myPicture = new ImageIcon(getClass().getResource("billeder/forkert5.png"));
                picture = new JLabel(myPicture);
                jPanel8.add(picture);
                System.out.println("Forkert bogstav");
                break;
            case 6:
                jPanel8.remove(0);
                myPicture = new ImageIcon(getClass().getResource("billeder/forkert6.png"));
                picture = new JLabel(myPicture);
                System.out.println("Forkert bogstav");
                System.out.println("Spillet er tabt");
                jPanel8.add(picture);
                panelTabt.setVisible(true);
                nedrePanel.setVisible(false);
                jPanel9.setVisible(false);

                break;
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jFrame1 = new javax.swing.JFrame();
        loginPanel = new javax.swing.JPanel();
        jPanel13 = new javax.swing.JPanel();
        knapLogin = new javax.swing.JButton();
        feltBruger = new javax.swing.JTextField();
        feltKode = new javax.swing.JTextField();
        labelBruger = new javax.swing.JLabel();
        labelPassword = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        øvrePanel = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        ord = new javax.swing.JLabel();
        Bogstaver = new javax.swing.JLabel();
        brugtFelt = new javax.swing.JLabel();
        nedrePanel = new javax.swing.JPanel();
        knapA = new javax.swing.JButton();
        knapB = new javax.swing.JButton();
        knapC = new javax.swing.JButton();
        knapD = new javax.swing.JButton();
        knapE = new javax.swing.JButton();
        knapF = new javax.swing.JButton();
        knapG = new javax.swing.JButton();
        knapH = new javax.swing.JButton();
        knapI = new javax.swing.JButton();
        knapJ = new javax.swing.JButton();
        knapK = new javax.swing.JButton();
        knapL = new javax.swing.JButton();
        knapM = new javax.swing.JButton();
        knapN = new javax.swing.JButton();
        knapO = new javax.swing.JButton();
        knapP = new javax.swing.JButton();
        knapQ = new javax.swing.JButton();
        knapR = new javax.swing.JButton();
        knapS = new javax.swing.JButton();
        knapT = new javax.swing.JButton();
        knapU = new javax.swing.JButton();
        knapV = new javax.swing.JButton();
        knapW = new javax.swing.JButton();
        knapX = new javax.swing.JButton();
        knapY = new javax.swing.JButton();
        knapZ = new javax.swing.JButton();
        knapÆ = new javax.swing.JButton();
        knapØ = new javax.swing.JButton();
        knapÅ = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jPanel10 = new javax.swing.JPanel();
        jPanel11 = new javax.swing.JPanel();
        jPanel12 = new javax.swing.JPanel();
        panelTabt = new javax.swing.JPanel();
        labelVundet = new javax.swing.JLabel();
        TabtSpilIgen = new javax.swing.JButton();
        panelVundet = new javax.swing.JPanel();
        labelTabt = new javax.swing.JLabel();
        VundetSpilIgen = new javax.swing.JButton();

        javax.swing.GroupLayout jFrame1Layout = new javax.swing.GroupLayout(jFrame1.getContentPane());
        jFrame1.getContentPane().setLayout(jFrame1Layout);
        jFrame1Layout.setHorizontalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame1Layout.setVerticalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(329, 507));
        setResizable(false);
        getContentPane().setLayout(new java.awt.GridBagLayout());

        loginPanel.setLayout(new java.awt.GridBagLayout());

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        loginPanel.add(jPanel13, new java.awt.GridBagConstraints());

        knapLogin.setText("Login");
        knapLogin.setActionCommand("buttonLogin");
        knapLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                knapLoginActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(13, 5, 228, 0);
        loginPanel.add(knapLogin, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 84;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(190, 5, 0, 77);
        loginPanel.add(feltBruger, gridBagConstraints);
        feltBruger.getAccessibleContext().setAccessibleName("");

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 84;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(7, 5, 0, 77);
        loginPanel.add(feltKode, gridBagConstraints);

        labelBruger.setText("Brugernavn");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipadx = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(193, 82, 0, 0);
        loginPanel.add(labelBruger, gridBagConstraints);

        labelPassword.setText("Password");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.ipadx = 20;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 82, 0, 0);
        loginPanel.add(labelPassword, gridBagConstraints);

        getContentPane().add(loginPanel, new java.awt.GridBagConstraints());

        jPanel6.setLayout(new java.awt.GridBagLayout());

        øvrePanel.setPreferredSize(new java.awt.Dimension(329, 307));
        øvrePanel.setLayout(new java.awt.GridBagLayout());

        jPanel8.setLayout(new javax.swing.BoxLayout(jPanel8, javax.swing.BoxLayout.LINE_AXIS));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        øvrePanel.add(jPanel8, gridBagConstraints);

        jPanel9.setPreferredSize(new java.awt.Dimension(156, 81));
        jPanel9.setLayout(new java.awt.GridBagLayout());

        ord.setText("ord");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(42, 43, 0, 0);
        jPanel9.add(ord, gridBagConstraints);

        Bogstaver.setText("Bogstaver");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(3, 43, 4, 0);
        jPanel9.add(Bogstaver, gridBagConstraints);

        brugtFelt.setText("brugtFelt");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(3, 12, 4, 19);
        jPanel9.add(brugtFelt, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        øvrePanel.add(jPanel9, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 1;
        jPanel6.add(øvrePanel, gridBagConstraints);

        nedrePanel.setMinimumSize(new java.awt.Dimension(329, 200));
        nedrePanel.setPreferredSize(new java.awt.Dimension(329, 200));
        nedrePanel.setLayout(new java.awt.GridBagLayout());

        knapA.setText("a");
        knapA.setPreferredSize(new java.awt.Dimension(45, 25));
        knapA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aButton(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.ipadx = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(17, 38, 0, 0);
        nedrePanel.add(knapA, gridBagConstraints);

        knapB.setText("b");
        knapB.setPreferredSize(new java.awt.Dimension(45, 25));
        knapB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bButton(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.ipadx = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(17, 0, 0, 0);
        nedrePanel.add(knapB, gridBagConstraints);

        knapC.setText("c");
        knapC.setPreferredSize(new java.awt.Dimension(45, 25));
        knapC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cButton(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.ipadx = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(17, 0, 0, 0);
        nedrePanel.add(knapC, gridBagConstraints);

        knapD.setText("d");
        knapD.setPreferredSize(new java.awt.Dimension(45, 25));
        knapD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dButton(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.ipadx = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(17, 0, 0, 0);
        nedrePanel.add(knapD, gridBagConstraints);

        knapE.setText("e");
        knapE.setPreferredSize(new java.awt.Dimension(45, 25));
        knapE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eButton(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.ipadx = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(17, 0, 0, 0);
        nedrePanel.add(knapE, gridBagConstraints);

        knapF.setText("f");
        knapF.setMaximumSize(new java.awt.Dimension(39, 25));
        knapF.setMinimumSize(new java.awt.Dimension(39, 25));
        knapF.setPreferredSize(new java.awt.Dimension(45, 25));
        knapF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fButton(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.ipadx = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(17, 0, 0, 21);
        nedrePanel.add(knapF, gridBagConstraints);

        knapG.setText("g");
        knapG.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        knapG.setPreferredSize(new java.awt.Dimension(45, 25));
        knapG.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gButton(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.ipadx = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 38, 0, 0);
        nedrePanel.add(knapG, gridBagConstraints);

        knapH.setText("h");
        knapH.setPreferredSize(new java.awt.Dimension(45, 25));
        knapH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hButton(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.ipadx = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        nedrePanel.add(knapH, gridBagConstraints);

        knapI.setText("i");
        knapI.setMaximumSize(new java.awt.Dimension(39, 25));
        knapI.setMinimumSize(new java.awt.Dimension(39, 25));
        knapI.setPreferredSize(new java.awt.Dimension(45, 25));
        knapI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                iButton(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.ipadx = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        nedrePanel.add(knapI, gridBagConstraints);

        knapJ.setText("j");
        knapJ.setMaximumSize(new java.awt.Dimension(39, 25));
        knapJ.setMinimumSize(new java.awt.Dimension(39, 25));
        knapJ.setPreferredSize(new java.awt.Dimension(45, 25));
        knapJ.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.ipadx = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        nedrePanel.add(knapJ, gridBagConstraints);

        knapK.setText("k");
        knapK.setPreferredSize(new java.awt.Dimension(45, 25));
        knapK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kButton(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.ipadx = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        nedrePanel.add(knapK, gridBagConstraints);

        knapL.setText("l");
        knapL.setMaximumSize(new java.awt.Dimension(39, 25));
        knapL.setMinimumSize(new java.awt.Dimension(39, 25));
        knapL.setPreferredSize(new java.awt.Dimension(45, 25));
        knapL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lButton(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.ipadx = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 21);
        nedrePanel.add(knapL, gridBagConstraints);

        knapM.setText("m");
        knapM.setPreferredSize(new java.awt.Dimension(45, 25));
        knapM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mButton(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.ipadx = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 38, 0, 0);
        nedrePanel.add(knapM, gridBagConstraints);

        knapN.setText("n");
        knapN.setPreferredSize(new java.awt.Dimension(45, 25));
        knapN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nButton(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.ipadx = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        nedrePanel.add(knapN, gridBagConstraints);

        knapO.setText("o");
        knapO.setPreferredSize(new java.awt.Dimension(45, 25));
        knapO.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                oButton(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.ipadx = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        nedrePanel.add(knapO, gridBagConstraints);

        knapP.setText("p");
        knapP.setPreferredSize(new java.awt.Dimension(45, 25));
        knapP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pButton(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.ipadx = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        nedrePanel.add(knapP, gridBagConstraints);

        knapQ.setText("q");
        knapQ.setPreferredSize(new java.awt.Dimension(45, 25));
        knapQ.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                qButton(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.ipadx = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        nedrePanel.add(knapQ, gridBagConstraints);

        knapR.setText("r");
        knapR.setPreferredSize(new java.awt.Dimension(45, 25));
        knapR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rButton(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.ipadx = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 21);
        nedrePanel.add(knapR, gridBagConstraints);

        knapS.setText("s");
        knapS.setPreferredSize(new java.awt.Dimension(45, 25));
        knapS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sButton(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.ipadx = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 38, 0, 0);
        nedrePanel.add(knapS, gridBagConstraints);

        knapT.setText("t");
        knapT.setPreferredSize(new java.awt.Dimension(45, 25));
        knapT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tButton(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.ipadx = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        nedrePanel.add(knapT, gridBagConstraints);

        knapU.setText("u");
        knapU.setPreferredSize(new java.awt.Dimension(45, 25));
        knapU.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                uButton(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.ipadx = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        nedrePanel.add(knapU, gridBagConstraints);

        knapV.setText("v");
        knapV.setPreferredSize(new java.awt.Dimension(45, 25));
        knapV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vButton(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.ipadx = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        nedrePanel.add(knapV, gridBagConstraints);

        knapW.setText("w");
        knapW.setPreferredSize(new java.awt.Dimension(45, 25));
        knapW.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                wButton(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.ipadx = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        nedrePanel.add(knapW, gridBagConstraints);

        knapX.setText("x");
        knapX.setPreferredSize(new java.awt.Dimension(45, 25));
        knapX.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                xButton(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.ipadx = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 21);
        nedrePanel.add(knapX, gridBagConstraints);

        knapY.setText("y");
        knapY.setPreferredSize(new java.awt.Dimension(45, 25));
        knapY.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                yButton(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.ipadx = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 38, 13, 0);
        nedrePanel.add(knapY, gridBagConstraints);

        knapZ.setText("z");
        knapZ.setPreferredSize(new java.awt.Dimension(45, 25));
        knapZ.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                zButton(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.ipadx = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 13, 0);
        nedrePanel.add(knapZ, gridBagConstraints);

        knapÆ.setText("æ");
        knapÆ.setPreferredSize(new java.awt.Dimension(45, 25));
        knapÆ.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                æButton(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.ipadx = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 13, 0);
        nedrePanel.add(knapÆ, gridBagConstraints);

        knapØ.setText("ø");
        knapØ.setPreferredSize(new java.awt.Dimension(45, 25));
        knapØ.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                øButton(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.ipadx = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 13, 0);
        nedrePanel.add(knapØ, gridBagConstraints);

        knapÅ.setText("å");
        knapÅ.setPreferredSize(new java.awt.Dimension(45, 25));
        knapÅ.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                åButton(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.ipadx = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 13, 0);
        nedrePanel.add(knapÅ, gridBagConstraints);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        nedrePanel.add(jPanel3, gridBagConstraints);

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        nedrePanel.add(jPanel10, new java.awt.GridBagConstraints());

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        nedrePanel.add(jPanel11, new java.awt.GridBagConstraints());

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        nedrePanel.add(jPanel12, new java.awt.GridBagConstraints());

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 2;
        jPanel6.add(nedrePanel, gridBagConstraints);

        labelVundet.setText("Du har tabt!");

        TabtSpilIgen.setText("Spil igen");
        TabtSpilIgen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TabtSpilIgenActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelTabtLayout = new javax.swing.GroupLayout(panelTabt);
        panelTabt.setLayout(panelTabtLayout);
        panelTabtLayout.setHorizontalGroup(
            panelTabtLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelTabtLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelTabtLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelVundet, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(TabtSpilIgen, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        panelTabtLayout.setVerticalGroup(
            panelTabtLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelTabtLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(labelVundet, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(TabtSpilIgen)
                .addContainerGap())
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 2;
        jPanel6.add(panelTabt, gridBagConstraints);

        labelTabt.setText("Du har vundet!");

        VundetSpilIgen.setText("Spil igen");
        VundetSpilIgen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                VundetSpilIgenActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelVundetLayout = new javax.swing.GroupLayout(panelVundet);
        panelVundet.setLayout(panelVundetLayout);
        panelVundetLayout.setHorizontalGroup(
            panelVundetLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelVundetLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelVundetLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelTabt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(VundetSpilIgen, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        panelVundetLayout.setVerticalGroup(
            panelVundetLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelVundetLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(labelTabt, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(VundetSpilIgen)
                .addContainerGap())
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 2;
        jPanel6.add(panelVundet, gridBagConstraints);

        getContentPane().add(jPanel6, new java.awt.GridBagConstraints());

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void knapLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_knapLoginActionPerformed
       
        try {
            connect();
                spil.login(feltBruger.getText(), feltKode.getText());

                    jPanel6.setVisible(true);

                    loginPanel.setVisible(false);

                    ImageIcon myPicture = new ImageIcon(getClass().getResource("billeder/galge.png"));
                    JLabel picture = new JLabel(myPicture);
                    jPanel8.add(picture);
                    System.out.println("Spillet er startet");
                    Bogstaver.setText("Brugte bogstaver: ");
                    spil.nulstil();
                    opdaterOrd();
                    brugtFelt.setText(spil.getBrugteBogstaver().toString());

                
           
            

        } catch (Exception e) {

        }
    }//GEN-LAST:event_knapLoginActionPerformed

    private void VundetSpilIgenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_VundetSpilIgenActionPerformed
        try {
            jPanel8.remove(0);
            nedrePanel.setVisible(true);
            panelVundet.setVisible(false);
            ImageIcon myPicture = new ImageIcon(getClass().getResource("galge.png"));
            JLabel picture = new JLabel(myPicture);
            jPanel8.add(picture);
            System.out.println("Added picture");
            Bogstaver.setText("Brugte bogstaver: ");
            spil.nulstil();
            jPanel9.setVisible(true);
            opdaterOrd();
            brugtFelt.setText(spil.getBrugteBogstaver().toString());
        } catch (Exception e) {

        }
    }//GEN-LAST:event_VundetSpilIgenActionPerformed

    private void TabtSpilIgenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TabtSpilIgenActionPerformed
        try {
            panelTabt.setVisible(false);

            jPanel8.remove(0);
            nedrePanel.setVisible(true);
            ImageIcon myPicture = new ImageIcon(getClass().getResource("galge.png"));
            JLabel picture = new JLabel(myPicture);
            jPanel8.add(picture);
            System.out.println("Added picture");
            Bogstaver.setText("Brugte bogstaver: ");
            spil.nulstil();
            jPanel9.setVisible(true);
            opdaterOrd();
            brugtFelt.setText(spil.getBrugteBogstaver().toString());

        } catch (Exception e) {

        }
    }//GEN-LAST:event_TabtSpilIgenActionPerformed

    private void åButton(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_åButton

        try {
            spil.gætBogstav("å");
            spil.logStatus();
            if (!spil.erSidsteBogstavKorrekt()) {
                opdaterSpil();
                brugtFelt.setText(spil.getBrugteBogstaver().toString());
            } else {
                opdaterOrd();
                brugtFelt.setText(spil.getBrugteBogstaver().toString());
            }
        } catch (Exception e) {

        }
    }//GEN-LAST:event_åButton

    private void øButton(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_øButton

        try {
            spil.gætBogstav("ø");
            spil.logStatus();
            if (!spil.erSidsteBogstavKorrekt()) {
                opdaterSpil();
                brugtFelt.setText(spil.getBrugteBogstaver().toString());
            } else {
                opdaterOrd();
                brugtFelt.setText(spil.getBrugteBogstaver().toString());
            }

        } catch (Exception e) {

        }
    }//GEN-LAST:event_øButton

    private void æButton(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_æButton

        try {
            spil.gætBogstav("æ");
            spil.logStatus();
            if (!spil.erSidsteBogstavKorrekt()) {
                opdaterSpil();
                brugtFelt.setText(spil.getBrugteBogstaver().toString());
            } else {
                opdaterOrd();
                brugtFelt.setText(spil.getBrugteBogstaver().toString());
            }
        } catch (Exception e) {

        }
    }//GEN-LAST:event_æButton

    private void zButton(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_zButton

        try {
            spil.gætBogstav("z");
            spil.logStatus();
            if (!spil.erSidsteBogstavKorrekt()) {
                opdaterSpil();
                brugtFelt.setText(spil.getBrugteBogstaver().toString());
            } else {
                opdaterOrd();
                brugtFelt.setText(spil.getBrugteBogstaver().toString());
            }
        } catch (Exception e) {

        }
    }//GEN-LAST:event_zButton

    private void yButton(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_yButton

        try {
            spil.gætBogstav("y");
            spil.logStatus();
            if (!spil.erSidsteBogstavKorrekt()) {
                opdaterSpil();
                brugtFelt.setText(spil.getBrugteBogstaver().toString());
            } else {
                opdaterOrd();
                brugtFelt.setText(spil.getBrugteBogstaver().toString());
            }
        } catch (Exception e) {

        }
    }//GEN-LAST:event_yButton

    private void xButton(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_xButton

        try {
            spil.gætBogstav("x");
            spil.logStatus();
            if (!spil.erSidsteBogstavKorrekt()) {
                opdaterSpil();
                brugtFelt.setText(spil.getBrugteBogstaver().toString());
            } else {
                opdaterOrd();
                brugtFelt.setText(spil.getBrugteBogstaver().toString());
            }

        } catch (Exception e) {

        }
    }//GEN-LAST:event_xButton

    private void wButton(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_wButton

        System.out.println("Test");
        try {
            spil.gætBogstav("w");
            spil.logStatus();
            if (!spil.erSidsteBogstavKorrekt()) {
                opdaterSpil();
                brugtFelt.setText(spil.getBrugteBogstaver().toString());
            } else {
                opdaterOrd();
                brugtFelt.setText(spil.getBrugteBogstaver().toString());
            }
        } catch (Exception e) {

        }
    }//GEN-LAST:event_wButton

    private void vButton(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vButton

        try {
            spil.gætBogstav("v");
            spil.logStatus();
            if (!spil.erSidsteBogstavKorrekt()) {
                opdaterSpil();
                brugtFelt.setText(spil.getBrugteBogstaver().toString());
            } else {
                opdaterOrd();
                brugtFelt.setText(spil.getBrugteBogstaver().toString());
            }
        } catch (Exception e) {

        }
    }//GEN-LAST:event_vButton

    private void uButton(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_uButton

        try {
            spil.gætBogstav("u");
            spil.logStatus();
            if (!spil.erSidsteBogstavKorrekt()) {
                opdaterSpil();
                brugtFelt.setText(spil.getBrugteBogstaver().toString());
            } else {
                opdaterOrd();
                brugtFelt.setText(spil.getBrugteBogstaver().toString());
            }
        } catch (Exception e) {

        }
    }//GEN-LAST:event_uButton

    private void tButton(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tButton

        try {
            spil.gætBogstav("t");
            spil.logStatus();
            if (!spil.erSidsteBogstavKorrekt()) {
                opdaterSpil();
                brugtFelt.setText(spil.getBrugteBogstaver().toString());
            } else {
                opdaterOrd();
                brugtFelt.setText(spil.getBrugteBogstaver().toString());
            }
        } catch (Exception e) {

        }
    }//GEN-LAST:event_tButton

    private void sButton(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sButton

        try {
            spil.gætBogstav("s");
            spil.logStatus();
            if (!spil.erSidsteBogstavKorrekt()) {
                opdaterSpil();
                brugtFelt.setText(spil.getBrugteBogstaver().toString());
            } else {
                opdaterOrd();
                brugtFelt.setText(spil.getBrugteBogstaver().toString());
            }
        } catch (Exception e) {

        }
    }//GEN-LAST:event_sButton

    private void rButton(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rButton

        try {
            spil.gætBogstav("r");
            spil.logStatus();
            if (!spil.erSidsteBogstavKorrekt()) {
                opdaterSpil();
                brugtFelt.setText(spil.getBrugteBogstaver().toString());
            } else {
                opdaterOrd();
                brugtFelt.setText(spil.getBrugteBogstaver().toString());
            }
        } catch (Exception e) {

        }
    }//GEN-LAST:event_rButton

    private void qButton(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_qButton

        try {
            spil.gætBogstav("q");
            spil.logStatus();
            if (!spil.erSidsteBogstavKorrekt()) {
                opdaterSpil();
                brugtFelt.setText(spil.getBrugteBogstaver().toString());
            } else {
                opdaterOrd();
                brugtFelt.setText(spil.getBrugteBogstaver().toString());
            }
        } catch (Exception e) {

        }
    }//GEN-LAST:event_qButton

    private void pButton(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pButton

        try {
            spil.gætBogstav("p");
            spil.logStatus();
            if (!spil.erSidsteBogstavKorrekt()) {
                opdaterSpil();
                brugtFelt.setText(spil.getBrugteBogstaver().toString());
            } else {
                opdaterOrd();
                brugtFelt.setText(spil.getBrugteBogstaver().toString());
            }
        } catch (Exception e) {

        }
    }//GEN-LAST:event_pButton

    private void oButton(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_oButton

        try {
            spil.gætBogstav("o");
            spil.logStatus();
            if (!spil.erSidsteBogstavKorrekt()) {
                opdaterSpil();
                brugtFelt.setText(spil.getBrugteBogstaver().toString());
            } else {
                opdaterOrd();
                brugtFelt.setText(spil.getBrugteBogstaver().toString());
            }
        } catch (Exception e) {

        }
    }//GEN-LAST:event_oButton

    private void nButton(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nButton

        try {
            spil.gætBogstav("n");
            spil.logStatus();
            if (!spil.erSidsteBogstavKorrekt()) {
                opdaterSpil();
                brugtFelt.setText(spil.getBrugteBogstaver().toString());
            } else {
                opdaterOrd();
                brugtFelt.setText(spil.getBrugteBogstaver().toString());
            }
        } catch (Exception e) {

        }
    }//GEN-LAST:event_nButton

    private void mButton(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mButton

        try {
            spil.gætBogstav("m");
            spil.logStatus();
            if (!spil.erSidsteBogstavKorrekt()) {
                opdaterSpil();
                brugtFelt.setText(spil.getBrugteBogstaver().toString());
            } else {
                opdaterOrd();
                brugtFelt.setText(spil.getBrugteBogstaver().toString());
            }
        } catch (Exception e) {

        }
    }//GEN-LAST:event_mButton

    private void lButton(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lButton

        try {
            spil.gætBogstav("l");
            spil.logStatus();
            if (!spil.erSidsteBogstavKorrekt()) {
                opdaterSpil();
                brugtFelt.setText(spil.getBrugteBogstaver().toString());
            } else {
                opdaterOrd();
                brugtFelt.setText(spil.getBrugteBogstaver().toString());
            }
        } catch (Exception e) {

        }
    }//GEN-LAST:event_lButton

    private void kButton(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kButton

        try {
            spil.gætBogstav("k");
            spil.logStatus();
            if (!spil.erSidsteBogstavKorrekt()) {
                opdaterSpil();
                brugtFelt.setText(spil.getBrugteBogstaver().toString());
            } else {
                opdaterOrd();
                brugtFelt.setText(spil.getBrugteBogstaver().toString());
            }
        } catch (Exception e) {

        }
    }//GEN-LAST:event_kButton

    private void jButton(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton

        try {
            spil.gætBogstav("j");
            spil.logStatus();
            if (!spil.erSidsteBogstavKorrekt()) {
                opdaterSpil();
                brugtFelt.setText(spil.getBrugteBogstaver().toString());
            } else {
                opdaterOrd();
                brugtFelt.setText(spil.getBrugteBogstaver().toString());
            }
        } catch (Exception e) {

        }
    }//GEN-LAST:event_jButton

    private void iButton(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_iButton

        try {
            spil.gætBogstav("i");
            spil.logStatus();
            if (!spil.erSidsteBogstavKorrekt()) {
                opdaterSpil();
                brugtFelt.setText(spil.getBrugteBogstaver().toString());
            } else {
                opdaterOrd();
                brugtFelt.setText(spil.getBrugteBogstaver().toString());
            }
        } catch (Exception e) {

        }
    }//GEN-LAST:event_iButton

    private void hButton(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hButton

        try {
            spil.gætBogstav("h");
            spil.logStatus();
            if (!spil.erSidsteBogstavKorrekt()) {
                opdaterSpil();
                brugtFelt.setText(spil.getBrugteBogstaver().toString());
            } else {
                opdaterOrd();
                brugtFelt.setText(spil.getBrugteBogstaver().toString());
            }
        } catch (Exception e) {

        }
    }//GEN-LAST:event_hButton

    private void gButton(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gButton

        try {
            spil.gætBogstav("g");
            spil.logStatus();
            if (!spil.erSidsteBogstavKorrekt()) {
                opdaterSpil();
                brugtFelt.setText(spil.getBrugteBogstaver().toString());
            } else {
                opdaterOrd();
                brugtFelt.setText(spil.getBrugteBogstaver().toString());
            }
        } catch (Exception e) {

        }
    }//GEN-LAST:event_gButton

    private void fButton(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fButton

        try {
            spil.gætBogstav("f");
            spil.logStatus();
            if (!spil.erSidsteBogstavKorrekt()) {
                opdaterSpil();
                brugtFelt.setText(spil.getBrugteBogstaver().toString());
            } else {
                opdaterOrd();
                brugtFelt.setText(spil.getBrugteBogstaver().toString());
            }
        } catch (Exception e) {

        }
    }//GEN-LAST:event_fButton

    private void eButton(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eButton

        try {
            spil.gætBogstav("e");
            spil.logStatus();
            if (!spil.erSidsteBogstavKorrekt()) {
                opdaterSpil();
                brugtFelt.setText(spil.getBrugteBogstaver().toString());
            } else {
                opdaterOrd();
                brugtFelt.setText(spil.getBrugteBogstaver().toString());
            }
        } catch (Exception e) {

        }
    }//GEN-LAST:event_eButton

    private void dButton(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dButton

        try {
            spil.gætBogstav("d");
            spil.logStatus();
            if (!spil.erSidsteBogstavKorrekt()) {
                opdaterSpil();
                brugtFelt.setText(spil.getBrugteBogstaver().toString());
            } else {
                opdaterOrd();
                brugtFelt.setText(spil.getBrugteBogstaver().toString());
            }
        } catch (Exception e) {

        }
    }//GEN-LAST:event_dButton

    private void cButton(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cButton

        try {
            spil.gætBogstav("c");
            spil.logStatus();
            if (!spil.erSidsteBogstavKorrekt()) {
                opdaterSpil();
                brugtFelt.setText(spil.getBrugteBogstaver().toString());
            } else {
                opdaterOrd();
                brugtFelt.setText(spil.getBrugteBogstaver().toString());
            }
        } catch (Exception e) {

        }
    }//GEN-LAST:event_cButton

    private void bButton(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bButton

        try {
            spil.gætBogstav("b");
            spil.logStatus();
            if (!spil.erSidsteBogstavKorrekt()) {
                opdaterSpil();
                brugtFelt.setText(spil.getBrugteBogstaver().toString());
            } else {
                opdaterOrd();
                brugtFelt.setText(spil.getBrugteBogstaver().toString());
            }
        } catch (Exception e) {

        }
    }//GEN-LAST:event_bButton

    private void aButton(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aButton

        try {
            spil.gætBogstav("a");
            spil.logStatus();
            if (!spil.erSidsteBogstavKorrekt()) {
                opdaterSpil();
                brugtFelt.setText(spil.getBrugteBogstaver().toString());
            } else {
                opdaterOrd();
                brugtFelt.setText(spil.getBrugteBogstaver().toString());
            }
        } catch (Exception e) {

        }
    }//GEN-LAST:event_aButton

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(guiGalge.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(guiGalge.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(guiGalge.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(guiGalge.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new guiGalge().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Bogstaver;
    private javax.swing.JButton TabtSpilIgen;
    private javax.swing.JButton VundetSpilIgen;
    private javax.swing.JLabel brugtFelt;
    private javax.swing.JTextField feltBruger;
    private javax.swing.JTextField feltKode;
    private javax.swing.JFrame jFrame1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JButton knapA;
    private javax.swing.JButton knapB;
    private javax.swing.JButton knapC;
    private javax.swing.JButton knapD;
    private javax.swing.JButton knapE;
    private javax.swing.JButton knapF;
    private javax.swing.JButton knapG;
    private javax.swing.JButton knapH;
    private javax.swing.JButton knapI;
    private javax.swing.JButton knapJ;
    private javax.swing.JButton knapK;
    private javax.swing.JButton knapL;
    private javax.swing.JButton knapLogin;
    private javax.swing.JButton knapM;
    private javax.swing.JButton knapN;
    private javax.swing.JButton knapO;
    private javax.swing.JButton knapP;
    private javax.swing.JButton knapQ;
    private javax.swing.JButton knapR;
    private javax.swing.JButton knapS;
    private javax.swing.JButton knapT;
    private javax.swing.JButton knapU;
    private javax.swing.JButton knapV;
    private javax.swing.JButton knapW;
    private javax.swing.JButton knapX;
    private javax.swing.JButton knapY;
    private javax.swing.JButton knapZ;
    private javax.swing.JButton knapÅ;
    private javax.swing.JButton knapÆ;
    private javax.swing.JButton knapØ;
    private javax.swing.JLabel labelBruger;
    private javax.swing.JLabel labelPassword;
    private javax.swing.JLabel labelTabt;
    private javax.swing.JLabel labelVundet;
    private javax.swing.JPanel loginPanel;
    private javax.swing.JPanel nedrePanel;
    private javax.swing.JLabel ord;
    private javax.swing.JPanel panelTabt;
    private javax.swing.JPanel panelVundet;
    private javax.swing.JPanel øvrePanel;
    // End of variables declaration//GEN-END:variables
}
